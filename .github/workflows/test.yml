name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Check diff coverage
      if: github.event_name == 'pull_request'
      run: |
        echo "📊 Checking coverage for changed files only..."
        
        # Get list of changed files
        git fetch origin main
        CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep -E '\.(ts|tsx)$' | grep -v '\.test\.' || true)
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "✅ No TypeScript/TSX files changed"
          exit 0
        fi
        
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        # Check coverage for changed files
        node -e "
        const fs = require('fs');
        const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
        const changedFiles = process.argv[1].split('\n').filter(f => f);
        
        let allPassed = true;
        let summary = '\n📊 Diff Coverage Report:\n';
        summary += '─'.repeat(80) + '\n';
        
        changedFiles.forEach(file => {
          const srcFile = 'src/' + file.replace('src/', '');
          const fileCoverage = Object.keys(coverage).find(key => key.includes(file));
          
          if (fileCoverage && coverage[fileCoverage]) {
            const stats = coverage[fileCoverage];
            const lines = stats.lines.pct;
            const functions = stats.functions.pct;
            const branches = stats.branches.pct;
            const statements = stats.statements.pct;
            
            const passed = lines >= 80 && functions >= 80 && branches >= 80 && statements >= 80;
            const icon = passed ? '✅' : '❌';
            
            summary += \`\${icon} \${file}\n\`;
            summary += \`   Lines: \${lines}% | Functions: \${functions}% | Branches: \${branches}% | Statements: \${statements}%\n\`;
            
            if (!passed) {
              allPassed = false;
              if (lines < 80) summary += \`   ⚠️  Lines coverage below 80%\n\`;
              if (functions < 80) summary += \`   ⚠️  Functions coverage below 80%\n\`;
              if (branches < 80) summary += \`   ⚠️  Branches coverage below 80%\n\`;
              if (statements < 80) summary += \`   ⚠️  Statements coverage below 80%\n\`;
            }
          } else {
            summary += \`❌ \${file}\n\`;
            summary += \`   ⚠️  No coverage found - file is untested!\n\`;
            allPassed = false;
          }
          summary += '\n';
        });
        
        summary += '─'.repeat(80) + '\n';
        
        if (allPassed) {
          summary += '✅ All changed files meet 80% coverage threshold!\n';
          console.log(summary);
          process.exit(0);
        } else {
          summary += '❌ Some changed files have coverage below 80%\n';
          summary += 'Please add tests for the new code before merging.\n';
          console.log(summary);
          process.exit(1);
        }
        " "$CHANGED_FILES"

    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30

    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        json-summary-path: ./coverage/coverage-summary.json
        json-final-path: ./coverage/coverage-final.json
        file-coverage-mode: changes
        pr-number: ${{ github.event.pull_request.number }}
